function Out = FTTTr53x25v3(GPriceSheet,SharesSheet,DemandSheet,VehiclesSheet,SalesSheet,CostSheet,VTSheet,FTSheet,RTSheet,REGSheet,ExCapSheet,CO2Sheet,BFMSheet,dt,NTT,NWR,EndYear)
%---FTT transport with 31 technologies in 59 countries 
%
%  Matrices are 3D prisms with time in the 3rd dimension
%
%           time
%            .
%           .
%          .
%      /         /
%   t /         /
%    /         /
%  _/___i_____/
%  |         |   /
% j|         |NWR
%  |         | /
%  |_________|/
%      NTT

%---------------------Variable declarations--------------------------
StartYear = 2022;
NY = 31;
NJ = 12;
tScaling =2;                 %Exponential survival function with logistic curve gives 1.5 time scaling
N=(EndYear-StartYear)/dt+1;     %Number of simulation points (t=2 -> 2016.25)
%L=5;                            %learning rate uncertainty
%B=5;                            %initial battery cost
%ED=3;                            % Energy density

D = zeros(NWR,N);               %pkm demand (Mpkm/y)
Utot = zeros(NWR,N);            %Exog vehicles on road (k-veh)
Xitot = zeros(NWR,N);           %Exog vehicles sales (k-veh/y)
UtotS = zeros(NWR,N);           %Endog vehicles on road (k-veh)
ScrS = zeros(NWR,N);            %Scrappages (veh) 
S = zeros(NTT,NWR,N);           %Shares matrix
NSa=zeros(NTT,NWR,N+120);
NSales=zeros(NTT,NWR,N+120);       %New Sales
F = zeros(NTT,NTT,NWR);
dSij = zeros(NTT,NTT,NWR);      %Exchange in shares between i and j
G = zeros(NTT,NWR,N);           %Tranport services generated by technology Mpkm/y: sum Gi = D
U = zeros(NTT,NWR,N);           %Transport capacity by technology : number of SEATS in cars/public transport (kseats)
CF = zeros(NTT,NWR,N);          %Capacity factors in (Mpkm/kseat-y)
I = zeros(NTT,NWR,N);           %Vehicle sales by technology by dt (kseats/y)
Xi = zeros(NTT,NWR,N);          %Vehicle sales yearly (kseats/y)
XiH = zeros(NWR,NY);            %Vehicle sales history (kseats/y)
W = zeros(NTT,N);               %Cumulative investment on building cars (kseats)
J = zeros(NTT,NWR,N);           %Energy use per technology type from providing transport services (PJ/y)
JNJ = zeros(NJ,NWR,N);          %Fuel use per fuel type (PJ/y)
CO2 = zeros(NTT,NWR);           %The CO2 emissions from the transport sector kgCO2/seat-km
E = zeros(NTT,NWR,N);           %Emissions (Gt)
CO2Corr = zeros(NWR,N);
EG = zeros(NTT,NWR);            %Fuel consumption factors MJ/seat-km
dd = zeros(NTT,NWR);            %Inverse life expectancies (y^-1)
FF = zeros(NTT,NWR);            %Occupancy rate (p/seat)
CF = zeros(NTT,NWR); 

Costs = zeros(NTT,17,NWR,N,1,1,1);    %4D matrix of cost components
NewCost=zeros(NTT,1,NWR,N);
VT = zeros(NTT,NWR,N);          %Vehicle tax ($)
FT = zeros(NWR,N);              %fuel tax (% of fuel price)
RT = zeros(NTT,NWR,N);          %Road tax ($/y)
OilP = zeros(NTT,NWR,N);
SEx = zeros(NTT,NWR,N);         %Exogenous shares (no units)
REG = zeros(NTT,NWR,N);         %Regulation (0 or 1)
LCOT = zeros(NTT,NWR,N,1,1,1);        %Cost of transportation without policies ($/pkm)
dLCOT = zeros(NTT,NWR,N,1,1,1);       %STD cost of transportation without policies ($/pkm)
TLCOT = zeros(NTT,NWR,N,1,1,1);       %Cost of transportation with policies ($/pkm)
dTLCOT = zeros(NTT,NWR,N,1,1,1);      %STD cost of transportation with policies ($/pkm)
LTLCOT = zeros(NTT,NWR,N,1,1,1);      %Log of cost of transportation with policies ($/pkm)
dLTLCOT = zeros(NTT,NWR,N,1,1,1);      %Log STD of cost of transportation with policies ($/pkm)
ICost=zeros(NTT,NWR,N);          % initial cost without the cost of battery
tech1=zeros(1:3);
DelPr=zeros(NTT,NWR,N);
Cap=zeros(NTT,NWR,N);     %battery capacity

%------------------Variable initialisations------------------
%B = SPSheet(4:28,3:27);     %Spillover matrix
B = CostSheet(36:66,24:54);     %Spillover matrix
%b = LRSheet(4,3:27)';          %learning rates
b = CostSheet(1952:1982,5:9);
A = CostSheet(3:33,24:54);     %Exchange matrix
%Sales (to correct for fleet age effects), (NWR, 23:1 years old)
XiH = CostSheet(69:127,26:52);
% battery capacity
IBatCost=CostSheet(1985:1989,1);
% intital battery cost
EngD=CostSheet(1997:1999,2);
RareM=CostSheet(2002:2003,3:123);

%Survival function (23:1 years old)
Ell = CostSheet(133:191,26:52);
%Survival function derivative (23:1 years old)
dEll = CostSheet(258:316,26:52);
%Historical Tech change fn (23:1 years old)
TechFn = CostSheet(195:253,26:52);
%Markup factor assumption
DMC=CostSheet(3,64);

%New number of cars UtotS
UtotS(:,1) = sum(XiH.*Ell,2);
%Number of scrappages
ScrS(:,1) = sum(XiH.*dEll,2);

%Emissions factor corrections due to fleet age
CO2Corr(:,1) = sum(XiH.*Ell.*TechFn,2)./sum(XiH.*Ell,2);
%Carbon price at registration:
RTCO = interp1N(CO2Sheet(3,3:end)',CO2Sheet(3+1:3+NWR,3:end)',2022+dt*[0:N-1]')';
%Fuel Taxes: $/litre -> $/MJ, where 35MJ/litre approx
FT = interp1N(FTSheet(3,24:72)',FTSheet(3+1:3+NWR,24:end)',2022+dt*[0:N-1]')'/35;
%fuels conversion matrix
TJET = CostSheet(368:398,24:35);

%load spreadsheets for income price
RawM = GPriceSheet(61:62,2:126);
DMCcont=GPriceSheet(67,2:126);

for k=1:NWR
    %Cost matrices
    Costs(:,:,k,1,1,1,1) = CostSheet(33*(k-1)+3:33*k,3:19);
    %Costs(i,17,k,t-1)
    %Gamma values
    Gam(:,k) = CostSheet(33*(k-1)+3:33*k,15);
    
    %Starting shares (some small errors order 2% in the dataset)
    S(:,k,1)= SharesSheet(33*(k-1)+3:33*k,20);
    %New sales
    NSa(:,k,121)=SalesSheet(33+33*(k):63+33*(k),121);
    %energy use in MJ/km
    EG(:,k) = CostSheet(33*(k-1)+3:33*k,11)';
    %CO2 Emission factors in gCO2/km of new cars 
    CO2(:,k) = CostSheet(33*(k-1)+3:33*k,16)';
    %Number of seats per vehicle (s/veh)
    Nseats(:,k) = CostSheet(33*(k-1)+3:33*k,17)';
    %Euromonitor capacity factor in (Mpkm/kseats-y)
   
    % Don't use this
    CF0(:,k) = CostSheet(33*(k-1)+3:33*k,14)'/1000;
    CF0(isnan(CF0)) = 0; %Temp
  
    % Battery capacity
    Cap(:,k,1)=CostSheet(33*(k-1)+3:33*k,21)';
    ICost(:,k,1,1,1,1)=Costs(:,1,k,1,1,1,1)/DMCcont(1,1)-Cap(:,k,1)*IBatCost(1,1)-Costs(:,1,k,1,1,1,1)*0.15;
     %Filling factors in (p/seats) assumed constant
    FF(:,k) = CostSheet(33*(k-1)+3:33*k,13)';
    %Yearly exogenous demand Mvehkm interpolated on dt
    D(k,:) = interp1(DemandSheet(3,30:30+EndYear-StartYear),DemandSheet(3+k,30:30+EndYear-StartYear),2022+dt*[0:N-1]);
    %Yearly exogenous vehicle numbers in kveh interpolated on dt
    Utot(k,:) = interp1(VehiclesSheet(3,48:48+EndYear-StartYear),VehiclesSheet(3+k,48:48+EndYear-StartYear),2022+dt*[0:N-1]);
    %Sales historical
    %NSales(k,1:30)=SalesSheet(k+3,3:32);
    
    %Yearly exogenous vehicle sales in kveh/y interpolated on dt
    Xitot(k,:) = interp1(SalesSheet(3,35:35+EndYear-StartYear),SalesSheet(3+k,35:35+EndYear-StartYear),2022+dt*[0:N-1]);
    %Biofuel mandates
    BFM(k,:) = interp1(BFMSheet(3,9:9+EndYear-StartYear),BFMSheet(3+k,9:9+EndYear-StartYear),2022+dt*[0:N-1]);
    %Discount rates    
    r(:,k) = CostSheet(33*(k-1)+3:33*k,9)';
    
    %Normalise CFs to match the ratio between D and Utot:
    if (Utot(k,1) > 0) 
        CF(:,k,1) = CF0(:,k)./sum(S(:,k,1).*CF0(:,k)./FF(:,k)).*D(k,1)./Utot(k,1);
    else
        CF(:,k,1) = 0;
    end
    %car fleet calculated from shares    
    U(:,k,1) = S(:,k,1)*Utot(k,1);
    NSales(:,k,121)=NSa(:,k,121);
    %New vehicle sales
    for NS=1:120
     NSales(1:31,k,NS)=SalesSheet(33+33*(k):63+33*k,4+NS);
    end
      
    %I is new sales (positive changes in U)
    I(:,k,1) = (U(:,k,1) - U(:,k,1))/dt.*(U(:,k,1) - U(:,k,1)>0);
    %Total service generated by a particular technology Mpkm
    G(:,k,1) = U(:,k,1).*D(k,1)*1000;
    %Starting cumulative capacities
    W(:,k,1) = CostSheet(3:33,20);
    WCap(:,k,1) = CostSheet(3:33,20);
    %Fuel use, PJ/y
    J(:,k,1) = G(:,k,1).*EG(:,k)*2.388*10^(-11);
    %./FF(:,k)./Nseats(:,k);
    %Fuel use per fuel type PJ/y
    for i = 1:NJ
        if (i ~= 5 & i ~= 11)
            JNJ(i,k,1) = TJET(:,i)'*(G(:,k,1).*EG(:,k)./FF(:,k)./Nseats(:,k));
        elseif (i == 5) %remove biofuel component
            JNJ(i,k,1) = TJET(:,i)'*(G(:,k,1).*EG(:,k)./FF(:,k)./Nseats(:,k))*(1-BFM(k));
        else %Add biofuel component
            JNJ(i,k,1) = TJET(:,i)'*(G(:,k,1).*EG(:,k)./FF(:,k)./Nseats(:,k))*(BFM(k));
        end
    end
    %Emissions, Gt/y
    E(:,k,1)= G(:,k,1).*CO2(:,k).*(1-BFM(k,1))/1e6;    
    %Vehicle Taxes:
    VT(:,k,:) = permute(interp1N(VTSheet(2,3:51)',VTSheet(32*(k-1)+3:32*k+1,3:51)',2022+dt*[0:N-1]')',[1 3 2]);
    %Road Taxes:
    RT(:,k,:) = permute(interp1N(RTSheet(2,3:51)',RTSheet(32*(k-1)+3:32*k+1,3:51)',2022+dt*[0:N-1]')',[1 3 2]);
    %Oil price trend assumption 
    OilP(:,k,:)=CostSheet(2011:2041,11:123);
    %Exogenous capacities
    SEx(:,k,:) = permute(interp1N(ExCapSheet(2,3:51)',ExCapSheet(32*(k-1)+3:32*k+1,3:51)',2022+dt*[0:N-1]')',[1 3 2]);  
    %how regulation is modelled
    REG(:,k,1:4:end-3) = permute(REGSheet(32*(k-1)+3:32*k+1,3:2+EndYear-StartYear),[1 3 2]);
    REG(:,k,2:4:end-2) = permute(REGSheet(32*(k-1)+3:32*k+1,3:2+EndYear-StartYear),[1 3 2]);
    REG(:,k,3:4:end-1) = permute(REGSheet(32*(k-1)+3:32*k+1,3:2+EndYear-StartYear),[1 3 2]);
    REG(:,k,4:4:end) = permute(REGSheet(32*(k-1)+3:32*k+1,3:2+EndYear-StartYear),[1 3 2]); 
   end

for k=1:NWR
    %Calculation of LCOT
    [LCOT(:,k,1,1,1,1), dLCOT(:,k,1,1,1,1), TLCOT(:,k,1,1,1,1), dTLCOT(:,k,1,1,1,1), LTLCOT(:,k,1,1,1,1), dLTLCOT(:,k,1,1,1,1)] = FTTTrLCOTv3(Costs(:,:,k,1,1,1,1),CF(:,k),FF(:,k),Nseats(:,k),VT(:,k,1),FT(k,1),RT(:,k,1),OilP(:,k,1),RTCO(k,1),Gam(:,k),NTT);
end



%======================= Model dynamics ====================
hw = waitbar(0,'Calculation in progress');  %Create waitbar

for t = 2:N
    %Update the waitbar
    if mod(t,5)==0
        if ~ishandle(hw)
            break;
        else
            waitbar(t/N);
        end
    end
    %Is there a regulation and do we exceed that regulation?:
    isREG = (U(:,:,t-1) >= REG(:,:,t-1)).*(REG(:,:,t-1) >= 0);
  
    for k = 1:NWR
        for i = 1:NTT
            for j = 1:i-1
                % the fraction of new units of j whose cost turn out lower than 
                % median vlalue i is Fi, whie the fraction of units whose cost is
                % lower than j is Fj 
                dFij = 1.414*sqrt(dLTLCOT(i,k,t-1,1,1,1)*dLTLCOT(i,k,t-1,1,1,1)+dLTLCOT(j,k,t-1,1,1,1)*dLTLCOT(j,k,t-1,1,1,1));
                Fij = 0.5*(1+erft((LTLCOT(j,k,t-1,1,1,1)-LTLCOT(i,k,t-1,1,1,1))/dFij));
                Fji = 1 - Fij;
                F(i,j,k) = Fij*(1-isREG(i,k))*(1-isREG(j,k)) + isREG(j,k)*(1-isREG(i,k)) + .5*isREG(i,k)*isREG(j,k);
                F(j,i,k) = Fji*(1-isREG(j,k))*(1-isREG(i,k)) + isREG(i,k)*(1-isREG(j,k)) + .5*isREG(j,k)*isREG(i,k);
                %!!!---Shares equation here!!!----
                dSij(i,j,k) = S(i,k,t-1)*S(j,k,t-1)*(A(i,j)*F(i,j,k)-A(j,i)*F(j,i,k))*dt*CostSheet(k+2,57);
                dSij(j,i,k) = -dSij(i,j,k); 
            end
        end
        %Exogenous shares change
        %NOTE: Shares changes must sum to zero or they are not taken
        if abs(sum(SEx(:,k,t-1))) < 0.0001
            dSk(:,k) = SEx(:,k,t-1);
            dSk(1,k) = dSk(1,k) - sum(SEx(:,k,t-1))/NTT;
        else
            dSk(:,k) = 0;
        end        
        dSij(isnan(dSij)) = 0;
        %!!!---Shares equation here!!!----
        S(:,k,t) = S(:,k,t-1) + sum(dSij(:,:,k),2) + dSk(:,k);
        Costs(:,:,k,t,1,1,1) = Costs(:,:,k,t-1,1,1,1); 
        Cap(:,k,1)=CostSheet(33*(k-1)+3:33*k,21)';
        Cap(:,k,2)=Cap(:,k,1);
        Cap(:,k,t)=Cap(:,k,t-1);
        IDCost(:,k,t,1,1,1)=Costs(:,1,k,1,1,1,1)*0.15*0.993^(t-1);  
        if (Utot(k,t) > 0) 
            CF(:,k,t) = CF0(:,k)./sum(S(:,k,t).*CF0(:,k)./FF(:,k)).*D(k,t)./Utot(k,t);
        else
            CF(:,k,t) = 0;
        end
        %U is the transport capacity by technology (kseats)
        U(:,k,t) = S(:,k,t)*Utot(k,t);
        NSales(:,k,119+t)=(U(:,k,t)-U(:,k,t-1))*1000;
        totCap(:,k,t)=NSales(:,k,119+t).*Cap(:,k);
        
        if totCap(:,k,t)>=0
         totCap1(:,k,t)=NSales(:,k,119+t).*Cap(:,k);
        elseif totCap(:,k,t)<0
         totCap1(:,k,t)=0;
        end
        G(:,k,t) = U(:,k,t).*D(k,t)*1000;
        I(:,k,t) = (U(:,k,t)-U(:,k,t-1));
        %---Emissions---: calculate fleet age effects, yearly
        %Aging fleet
        if mod(t,1/dt) == 1
            %Update total car sales history
            XiH(k,:) = [XiH(k,2:end) Xitot(k,t)];
            %End of year number of cars UtotS
            UtotS(k,t) = sum(XiH(k,:).*Ell(k,:));
            %End of year number of scrappages
            ScrS(k,t) = sum(XiH(k,:).*dEll(k,:));
            %Update Tech change function for 1 in new years 
            %(we assume tech change is in our diffusion eqn)
            TechFn(k,:) = [TechFn(k,2:end) 1];
            %New correction factors:
            CO2Corr(k,t) = sum(XiH(k,:).*Ell(k,:).*TechFn(k,:))/sum(XiH(k,:).*Ell(k,:));
        else
            CO2Corr(k,t) = CO2Corr(k,t-1);
        end
        
        %Fleet emissions Gt/y
        E(:,k,t) = G(:,k,t).*CO2(:,k)*(1-BFM(k,t))/1e6;
        %Fuel use, PJ/y: filling factors don't change 
        J(:,k,t) = G(:,k,t).*EG(:,k)*2.388*10^(-11);
 
        %Fuel use per fuel type PJ/y
        for i = 1:NJ
            if (i ~= 5 & i ~= 11) %Other fuels
                JNJ(i,k,t) = TJET(:,i)'*(G(:,k,t).*EG(:,k)./FF(:,k)./Nseats(:,k));
            elseif (i == 5) %remove biofuel component
                JNJ(i,k,t) = TJET(:,i)'*(G(:,k,t).*EG(:,k)./FF(:,k)./Nseats(:,k))*(1-BFM(k)).*CO2Corr(k,t);
            elseif (i == 11)%Add biofuel component
                JNJ(i,k,t) = TJET(:,i)'*(G(:,k,t).*EG(:,k)./FF(:,k)./Nseats(:,k))*BFM(k).*CO2Corr(k,t);
            end
        end
    end
    %total capcity - used for modelling learning curve
    WCap(:,t) = WCap(:,t-1) + sum((totCap1(:,:,t)),2);
    WCapEV(1,t)=WCap(19,t)+WCap(20,t)+WCap(21,t)+WCap(22,t)+WCap(23,t)+WCap(24,t);

    BCost(:,t,1,1,1)=(EngD(1,1)^(t-1))*(RareM(1,t))*IBatCost(1,1)*((WCapEV(1,t)./WCapEV(1,2))).^(b(:,1));
 
    %This is global, hence we close the loop
    W(:,t) = W(:,t-1) + sum((B*I(:,:,t)),2)*dt;
    
  
    
    for k = 1:NWR
         Costs(:,1,k,t,1,1,1) = Costs(:,1,k,t-1,1,1,1) + b(:,1).*(W(:,t)-W(:,t-1))./W(:,t).*Costs(:,1,k,t-1,1,1,1);
         Costs(19:24,1,k,t,1,1,1)=(ICost(19:24,k,1,1,1,1)+BCost(19:24,t,1,1,1).*Cap(19:24,k,t)+IDCost(19:24,k,t,1,1,1))*DMCcont(1,t);
        [LCOT(:,k,t,1,1,1), dLCOT(:,k,t,1,1,1), TLCOT(:,k,t,1,1,1), dTLCOT(:,k,t,1,1,1), LTLCOT(:,k,t,1,1,1), dLTLCOT(:,k,t,1,1,1)] = FTTTrLCOTv3(Costs(:,:,k,t,1,1,1),CF(:,k),FF(:,k),Nseats(:,k),VT(:,k,t),FT(k,t),RT(:,k,t),OilP(:,k,t),RTCO(k,t),Gam(:,k),NTT);
    end 
    end
    
  

close(hw);

%====================Add Historical Emissions==================
t = [StartYear:dt:EndYear]';
th = [[2008:2021]'; t];
Dh = cat(2,DemandSheet(4:3+NWR,12:24),D(:,2:end));
Utoth = cat(2,VehiclesSheet(4:3+NWR,30:42),Utot(:,2:end));
CFh = zeros(NTT,NWR,size(Utoth,2));
Uh = CFh; Gh = CFh; Jh = CFh; Eh = CFh;
for k = 1:NWR
    Sh(:,k,:) = cat(3,permute(SharesSheet(33*(k-1)+3:33*k,5:19),[1 3 2]),S(:,k,2:end));
    
   
    for t = 1:size(Utoth,2)
        if (Utoth(k,t) > 0 & sum(Sh(:,k,t)) > 0)
            CFh(:,k,t) = CF0(:,k)./sum(Sh(:,k,t).*CF0(:,k)./FF(:,k)).*Dh(k,t)./Utoth(k,t);
             
        else
            CFh(:,k,t) = 0;
        end
        Uh(:,k,t) = Sh(:,k,t)*Utoth(k,t).*Nseats(:,k);
        Gh(:,k,t) = Uh(:,k,t).*CFh(:,k,t);
    
    end
end

Out.th = th;
Out.t = [StartYear:dt:EndYear]';
Out.D = Dh';
Out.Utot = Utoth';
Out.Sh = permute(Sh,[3 1 2]); %Shares without historical shares
Out.Gh = permute(Gh,[3 1 2]);
Out.Uh = permute(Uh,[3 1 2]);
Out.CFh = permute(CFh,[3 1 2]);
Out.Jh = permute(Jh,[3 1 2]);
Out.Eh = permute(Eh,[3 1 2]);
Out.S = permute(S,[3 1 2]);
Out.G = permute(G,[3 1 2]);
Out.U = permute(U,[3 1 2]);
Out.CF = permute(CF,[3 1 2]);
Out.J = permute(J,[3 1 2]);
Out.JNJ = permute(JNJ,[3 1 2]);
Out.E = permute(E,[3 1 2]);
Out.LCOT = permute(LCOT,[3 1 2]);
Out.dLCOT = permute(dLCOT,[3 1 2]);
Out.TLCOT = permute(TLCOT,[3 1 2]);
Out.dTLCOT = permute(dTLCOT,[3 1 2]);
Out.LTLCOT = permute(LTLCOT,[3 1 2]);
Out.FCosts = permute(Costs(:,4,:,:),[4 1 3 2]);
Out.ICosts = permute(Costs(:,1,:,:),[4 1 3 2]);
Out.W = permute(W,[3 1 2]);
Out.I = permute(I,[3 1 2]);
Out.VT = permute(VT,[3 1 2]);
Out.RT = permute(RT,[3 1 2]);
Out.FT = permute(FT,[3 1 2]);
Out.REG = permute(REG,[3 1 2]);
